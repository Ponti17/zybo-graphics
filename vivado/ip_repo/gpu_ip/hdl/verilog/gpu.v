// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.2
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="gpu,hls_ip_2017_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z010clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.750000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=8,HLS_SYN_DSP=2,HLS_SYN_FF=2623,HLS_SYN_LUT=2432}" *)

module gpu (
        ap_clk,
        ap_rst_n,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 15'd1;
parameter    ap_ST_fsm_state2 = 15'd2;
parameter    ap_ST_fsm_state3 = 15'd4;
parameter    ap_ST_fsm_state4 = 15'd8;
parameter    ap_ST_fsm_state5 = 15'd16;
parameter    ap_ST_fsm_state6 = 15'd32;
parameter    ap_ST_fsm_state7 = 15'd64;
parameter    ap_ST_fsm_state8 = 15'd128;
parameter    ap_ST_fsm_pp0_stage0 = 15'd256;
parameter    ap_ST_fsm_state12 = 15'd512;
parameter    ap_ST_fsm_state13 = 15'd1024;
parameter    ap_ST_fsm_state14 = 15'd2048;
parameter    ap_ST_fsm_state15 = 15'd4096;
parameter    ap_ST_fsm_state16 = 15'd8192;
parameter    ap_ST_fsm_state17 = 15'd16384;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM_ADDR_WIDTH = 32;
parameter    C_M_AXI_GMEM_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_USER_VALUE = 0;
parameter    C_M_AXI_GMEM_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_AWADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_AWID;
output  [7:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [C_M_AXI_GMEM_AWUSER_WIDTH - 1:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_WDATA;
output  [C_M_AXI_GMEM_WSTRB_WIDTH - 1:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_WID;
output  [C_M_AXI_GMEM_WUSER_WIDTH - 1:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_ARADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_ARID;
output  [7:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [C_M_AXI_GMEM_ARUSER_WIDTH - 1:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_RID;
input  [C_M_AXI_GMEM_RUSER_WIDTH - 1:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_BID;
input  [C_M_AXI_GMEM_BUSER_WIDTH - 1:0] m_axi_gmem_BUSER;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [14:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [31:0] frameBuffer_V;
wire   [7:0] status_V;
wire   [31:0] cl_V;
reg   [7:0] rowBuffer_V_1_address0;
reg    rowBuffer_V_1_ce0;
wire   [31:0] rowBuffer_V_1_q0;
reg   [7:0] rowBuffer_V_1_address1;
reg    rowBuffer_V_1_ce1;
reg    rowBuffer_V_1_we1;
wire   [31:0] rowBuffer_V_1_q1;
reg   [15:0] clip_x_V;
reg   [15:0] clip_y_V;
reg   [15:0] clip_w_V;
reg   [15:0] clip_h_V;
reg    gmem_blk_n_AR;
wire    ap_CS_fsm_state2;
reg    gmem_blk_n_R;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0_flag00000000;
reg   [0:0] exitcond_reg_441;
reg    gmem_AWVALID;
wire    gmem_AWREADY;
reg    gmem_WVALID;
wire    gmem_WREADY;
reg    gmem_ARVALID;
wire    gmem_ARREADY;
reg   [31:0] gmem_ARADDR;
reg   [0:0] gmem_ARID;
reg   [31:0] gmem_ARLEN;
reg   [2:0] gmem_ARSIZE;
reg   [1:0] gmem_ARBURST;
reg   [1:0] gmem_ARLOCK;
reg   [3:0] gmem_ARCACHE;
reg   [2:0] gmem_ARPROT;
reg   [3:0] gmem_ARQOS;
reg   [3:0] gmem_ARREGION;
reg   [0:0] gmem_ARUSER;
wire    gmem_RVALID;
reg    gmem_RREADY;
wire   [31:0] gmem_RDATA;
wire    gmem_RLAST;
wire   [0:0] gmem_RID;
wire   [0:0] gmem_RUSER;
wire   [1:0] gmem_RRESP;
wire    gmem_BVALID;
reg    gmem_BREADY;
wire   [1:0] gmem_BRESP;
wire   [0:0] gmem_BID;
wire   [0:0] gmem_BUSER;
reg   [8:0] i_reg_209;
reg   [8:0] ap_reg_pp0_iter1_i_reg_209;
wire    ap_block_state9_pp0_stage0_iter0;
reg    ap_block_state10_pp0_stage0_iter1;
wire    ap_block_state11_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_flag00011001;
reg   [31:0] gmem_addr_reg_426;
reg   [29:0] frameBuffer_V1_reg_432;
wire   [0:0] tmp_38_fu_311_p1;
reg   [0:0] tmp_38_reg_437;
wire   [0:0] exitcond_fu_315_p2;
reg   [0:0] ap_reg_pp0_iter1_exitcond_reg_441;
wire   [8:0] i_1_fu_321_p2;
reg   [8:0] i_1_reg_445;
reg    ap_enable_reg_pp0_iter0;
reg   [31:0] gmem_addr_read_reg_450;
wire   [0:0] tmp_39_fu_332_p3;
reg   [0:0] tmp_39_reg_455;
wire    ap_CS_fsm_state13;
wire   [6:0] i_2_fu_340_p2;
reg   [6:0] i_2_reg_459;
wire   [7:0] tmp_29_fu_350_p3;
reg   [7:0] tmp_29_reg_464;
wire    ap_CS_fsm_state14;
wire   [15:0] cmd_V_fu_394_p1;
reg   [15:0] cmd_V_reg_490;
reg   [15:0] arg0_V_reg_495;
wire   [15:0] arg1_V_fu_408_p1;
reg   [15:0] arg1_V_reg_501;
reg   [15:0] arg2_V_reg_507;
wire   [15:0] arg3_V_fu_412_p1;
reg   [15:0] arg3_V_reg_513;
wire    ap_CS_fsm_state15;
wire   [15:0] arg5_V_fu_417_p1;
reg   [15:0] arg5_V_reg_518;
reg   [15:0] arg6_V_reg_523;
wire    ap_CS_fsm_state8;
reg    ap_block_pp0_stage0_flag00011011;
reg    ap_condition_pp0_exit_iter0_state9;
reg    ap_enable_reg_pp0_iter2;
wire    grp_gpu_blit_rect_fu_232_ap_start;
wire    grp_gpu_blit_rect_fu_232_ap_done;
wire    grp_gpu_blit_rect_fu_232_ap_idle;
wire    grp_gpu_blit_rect_fu_232_ap_ready;
wire    grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_AWVALID;
wire   [31:0] grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_AWADDR;
wire   [0:0] grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_AWID;
wire   [31:0] grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_AWLEN;
wire   [2:0] grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_AWSIZE;
wire   [1:0] grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_AWBURST;
wire   [1:0] grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_AWLOCK;
wire   [3:0] grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_AWCACHE;
wire   [2:0] grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_AWPROT;
wire   [3:0] grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_AWQOS;
wire   [3:0] grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_AWREGION;
wire   [0:0] grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_AWUSER;
wire    grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_WVALID;
wire   [31:0] grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_WDATA;
wire   [3:0] grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_WSTRB;
wire    grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_WLAST;
wire   [0:0] grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_WID;
wire   [0:0] grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_WUSER;
wire    grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_ARVALID;
wire   [31:0] grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_ARADDR;
wire   [0:0] grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_ARID;
wire   [31:0] grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_ARLEN;
wire   [2:0] grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_ARSIZE;
wire   [1:0] grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_ARBURST;
wire   [1:0] grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_ARLOCK;
wire   [3:0] grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_ARCACHE;
wire   [2:0] grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_ARPROT;
wire   [3:0] grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_ARQOS;
wire   [3:0] grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_ARREGION;
wire   [0:0] grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_ARUSER;
wire    grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_RREADY;
wire    grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_BREADY;
wire   [15:0] StgValue_96_gpu_set_clip_fu_255_arg3_V;
wire   [15:0] StgValue_96_gpu_set_clip_fu_255_clip_x_V;
wire    StgValue_96_gpu_set_clip_fu_255_clip_x_V_ap_vld;
wire   [15:0] StgValue_96_gpu_set_clip_fu_255_clip_y_V;
wire    StgValue_96_gpu_set_clip_fu_255_clip_y_V_ap_vld;
wire   [15:0] StgValue_96_gpu_set_clip_fu_255_clip_w_V;
wire    StgValue_96_gpu_set_clip_fu_255_clip_w_V_ap_vld;
wire   [15:0] StgValue_96_gpu_set_clip_fu_255_clip_h_V;
wire    StgValue_96_gpu_set_clip_fu_255_clip_h_V_ap_vld;
reg   [8:0] i_phi_fu_213_p4;
reg   [6:0] i1_reg_221;
wire    ap_CS_fsm_state17;
reg    ap_block_state17_on_subcall_done;
wire    ap_CS_fsm_state12;
reg    ap_reg_grp_gpu_blit_rect_fu_232_ap_start;
wire    ap_CS_fsm_state16;
wire   [0:0] tmp_34_fu_421_p2;
wire   [31:0] i_cast1_fu_327_p1;
wire   [31:0] tmp_29_cast_fu_358_p1;
wire   [31:0] tmp_30_cast_fu_369_p1;
wire   [31:0] tmp_31_cast_fu_379_p1;
wire   [31:0] tmp_32_cast_fu_389_p1;
wire   [31:0] tmp_fu_291_p1;
reg    ap_reg_ioackin_gmem_ARREADY;
reg    ap_sig_ioackin_gmem_ARREADY;
wire   [29:0] cl_V3_fu_281_p4;
wire   [5:0] tmp_40_fu_346_p1;
wire   [7:0] tmp_30_fu_363_p2;
wire   [7:0] tmp_31_fu_374_p2;
wire   [7:0] tmp_32_fu_384_p2;
reg   [14:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 15'd1;
#0 clip_x_V = 16'd0;
#0 clip_y_V = 16'd0;
#0 clip_w_V = 16'd1920;
#0 clip_h_V = 16'd1080;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_reg_grp_gpu_blit_rect_fu_232_ap_start = 1'b0;
#0 ap_reg_ioackin_gmem_ARREADY = 1'b0;
end

gpu_rowBuffer_V_1 #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
rowBuffer_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(rowBuffer_V_1_address0),
    .ce0(rowBuffer_V_1_ce0),
    .q0(rowBuffer_V_1_q0),
    .address1(rowBuffer_V_1_address1),
    .ce1(rowBuffer_V_1_ce1),
    .we1(rowBuffer_V_1_we1),
    .d1(gmem_addr_read_reg_450),
    .q1(rowBuffer_V_1_q1)
);

gpu_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
gpu_control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .frameBuffer_V(frameBuffer_V),
    .status_V(status_V),
    .cl_V(cl_V)
);

gpu_gmem_m_axi #(
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM_CACHE_VALUE ))
gpu_gmem_m_axi_U(
    .AWVALID(m_axi_gmem_AWVALID),
    .AWREADY(m_axi_gmem_AWREADY),
    .AWADDR(m_axi_gmem_AWADDR),
    .AWID(m_axi_gmem_AWID),
    .AWLEN(m_axi_gmem_AWLEN),
    .AWSIZE(m_axi_gmem_AWSIZE),
    .AWBURST(m_axi_gmem_AWBURST),
    .AWLOCK(m_axi_gmem_AWLOCK),
    .AWCACHE(m_axi_gmem_AWCACHE),
    .AWPROT(m_axi_gmem_AWPROT),
    .AWQOS(m_axi_gmem_AWQOS),
    .AWREGION(m_axi_gmem_AWREGION),
    .AWUSER(m_axi_gmem_AWUSER),
    .WVALID(m_axi_gmem_WVALID),
    .WREADY(m_axi_gmem_WREADY),
    .WDATA(m_axi_gmem_WDATA),
    .WSTRB(m_axi_gmem_WSTRB),
    .WLAST(m_axi_gmem_WLAST),
    .WID(m_axi_gmem_WID),
    .WUSER(m_axi_gmem_WUSER),
    .ARVALID(m_axi_gmem_ARVALID),
    .ARREADY(m_axi_gmem_ARREADY),
    .ARADDR(m_axi_gmem_ARADDR),
    .ARID(m_axi_gmem_ARID),
    .ARLEN(m_axi_gmem_ARLEN),
    .ARSIZE(m_axi_gmem_ARSIZE),
    .ARBURST(m_axi_gmem_ARBURST),
    .ARLOCK(m_axi_gmem_ARLOCK),
    .ARCACHE(m_axi_gmem_ARCACHE),
    .ARPROT(m_axi_gmem_ARPROT),
    .ARQOS(m_axi_gmem_ARQOS),
    .ARREGION(m_axi_gmem_ARREGION),
    .ARUSER(m_axi_gmem_ARUSER),
    .RVALID(m_axi_gmem_RVALID),
    .RREADY(m_axi_gmem_RREADY),
    .RDATA(m_axi_gmem_RDATA),
    .RLAST(m_axi_gmem_RLAST),
    .RID(m_axi_gmem_RID),
    .RUSER(m_axi_gmem_RUSER),
    .RRESP(m_axi_gmem_RRESP),
    .BVALID(m_axi_gmem_BVALID),
    .BREADY(m_axi_gmem_BREADY),
    .BRESP(m_axi_gmem_BRESP),
    .BID(m_axi_gmem_BID),
    .BUSER(m_axi_gmem_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(gmem_ARVALID),
    .I_ARREADY(gmem_ARREADY),
    .I_ARADDR(gmem_ARADDR),
    .I_ARID(gmem_ARID),
    .I_ARLEN(gmem_ARLEN),
    .I_ARSIZE(gmem_ARSIZE),
    .I_ARLOCK(gmem_ARLOCK),
    .I_ARCACHE(gmem_ARCACHE),
    .I_ARQOS(gmem_ARQOS),
    .I_ARPROT(gmem_ARPROT),
    .I_ARUSER(gmem_ARUSER),
    .I_ARBURST(gmem_ARBURST),
    .I_ARREGION(gmem_ARREGION),
    .I_RVALID(gmem_RVALID),
    .I_RREADY(gmem_RREADY),
    .I_RDATA(gmem_RDATA),
    .I_RID(gmem_RID),
    .I_RUSER(gmem_RUSER),
    .I_RRESP(gmem_RRESP),
    .I_RLAST(gmem_RLAST),
    .I_AWVALID(gmem_AWVALID),
    .I_AWREADY(gmem_AWREADY),
    .I_AWADDR(grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_AWADDR),
    .I_AWID(grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_AWID),
    .I_AWLEN(grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_AWLEN),
    .I_AWSIZE(grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_AWSIZE),
    .I_AWLOCK(grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_AWLOCK),
    .I_AWCACHE(grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_AWCACHE),
    .I_AWQOS(grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_AWQOS),
    .I_AWPROT(grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_AWPROT),
    .I_AWUSER(grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_AWUSER),
    .I_AWBURST(grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_AWBURST),
    .I_AWREGION(grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_AWREGION),
    .I_WVALID(gmem_WVALID),
    .I_WREADY(gmem_WREADY),
    .I_WDATA(grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_WDATA),
    .I_WID(grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_WID),
    .I_WUSER(grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_WUSER),
    .I_WLAST(grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_WLAST),
    .I_WSTRB(grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_WSTRB),
    .I_BVALID(gmem_BVALID),
    .I_BREADY(gmem_BREADY),
    .I_BRESP(gmem_BRESP),
    .I_BID(gmem_BID),
    .I_BUSER(gmem_BUSER)
);

gpu_blit_rect grp_gpu_blit_rect_fu_232(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_gpu_blit_rect_fu_232_ap_start),
    .ap_done(grp_gpu_blit_rect_fu_232_ap_done),
    .ap_idle(grp_gpu_blit_rect_fu_232_ap_idle),
    .ap_ready(grp_gpu_blit_rect_fu_232_ap_ready),
    .m_axi_frameBuffer_V_AWVALID(grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_AWVALID),
    .m_axi_frameBuffer_V_AWREADY(gmem_AWREADY),
    .m_axi_frameBuffer_V_AWADDR(grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_AWADDR),
    .m_axi_frameBuffer_V_AWID(grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_AWID),
    .m_axi_frameBuffer_V_AWLEN(grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_AWLEN),
    .m_axi_frameBuffer_V_AWSIZE(grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_AWSIZE),
    .m_axi_frameBuffer_V_AWBURST(grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_AWBURST),
    .m_axi_frameBuffer_V_AWLOCK(grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_AWLOCK),
    .m_axi_frameBuffer_V_AWCACHE(grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_AWCACHE),
    .m_axi_frameBuffer_V_AWPROT(grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_AWPROT),
    .m_axi_frameBuffer_V_AWQOS(grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_AWQOS),
    .m_axi_frameBuffer_V_AWREGION(grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_AWREGION),
    .m_axi_frameBuffer_V_AWUSER(grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_AWUSER),
    .m_axi_frameBuffer_V_WVALID(grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_WVALID),
    .m_axi_frameBuffer_V_WREADY(gmem_WREADY),
    .m_axi_frameBuffer_V_WDATA(grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_WDATA),
    .m_axi_frameBuffer_V_WSTRB(grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_WSTRB),
    .m_axi_frameBuffer_V_WLAST(grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_WLAST),
    .m_axi_frameBuffer_V_WID(grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_WID),
    .m_axi_frameBuffer_V_WUSER(grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_WUSER),
    .m_axi_frameBuffer_V_ARVALID(grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_ARVALID),
    .m_axi_frameBuffer_V_ARREADY(gmem_ARREADY),
    .m_axi_frameBuffer_V_ARADDR(grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_ARADDR),
    .m_axi_frameBuffer_V_ARID(grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_ARID),
    .m_axi_frameBuffer_V_ARLEN(grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_ARLEN),
    .m_axi_frameBuffer_V_ARSIZE(grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_ARSIZE),
    .m_axi_frameBuffer_V_ARBURST(grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_ARBURST),
    .m_axi_frameBuffer_V_ARLOCK(grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_ARLOCK),
    .m_axi_frameBuffer_V_ARCACHE(grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_ARCACHE),
    .m_axi_frameBuffer_V_ARPROT(grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_ARPROT),
    .m_axi_frameBuffer_V_ARQOS(grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_ARQOS),
    .m_axi_frameBuffer_V_ARREGION(grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_ARREGION),
    .m_axi_frameBuffer_V_ARUSER(grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_ARUSER),
    .m_axi_frameBuffer_V_RVALID(gmem_RVALID),
    .m_axi_frameBuffer_V_RREADY(grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_RREADY),
    .m_axi_frameBuffer_V_RDATA(gmem_RDATA),
    .m_axi_frameBuffer_V_RLAST(gmem_RLAST),
    .m_axi_frameBuffer_V_RID(gmem_RID),
    .m_axi_frameBuffer_V_RUSER(gmem_RUSER),
    .m_axi_frameBuffer_V_RRESP(gmem_RRESP),
    .m_axi_frameBuffer_V_BVALID(gmem_BVALID),
    .m_axi_frameBuffer_V_BREADY(grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_BREADY),
    .m_axi_frameBuffer_V_BRESP(gmem_BRESP),
    .m_axi_frameBuffer_V_BID(gmem_BID),
    .m_axi_frameBuffer_V_BUSER(gmem_BUSER),
    .frameBuffer_V1(frameBuffer_V1_reg_432),
    .arg0_V(arg0_V_reg_495),
    .arg1_V(arg1_V_reg_501),
    .arg2_V(arg2_V_reg_507),
    .arg3_V(arg3_V_reg_513),
    .arg5_V(arg5_V_reg_518),
    .arg6_V(arg6_V_reg_523),
    .clip_x_V(clip_x_V),
    .clip_y_V(clip_y_V),
    .clip_w_V(clip_w_V),
    .clip_h_V(clip_h_V)
);

gpu_set_clip StgValue_96_gpu_set_clip_fu_255(
    .arg0_V(arg0_V_reg_495),
    .arg1_V(arg1_V_reg_501),
    .arg2_V(arg2_V_reg_507),
    .arg3_V(StgValue_96_gpu_set_clip_fu_255_arg3_V),
    .clip_x_V(StgValue_96_gpu_set_clip_fu_255_clip_x_V),
    .clip_x_V_ap_vld(StgValue_96_gpu_set_clip_fu_255_clip_x_V_ap_vld),
    .clip_y_V(StgValue_96_gpu_set_clip_fu_255_clip_y_V),
    .clip_y_V_ap_vld(StgValue_96_gpu_set_clip_fu_255_clip_y_V_ap_vld),
    .clip_w_V(StgValue_96_gpu_set_clip_fu_255_clip_w_V),
    .clip_w_V_ap_vld(StgValue_96_gpu_set_clip_fu_255_clip_w_V_ap_vld),
    .clip_h_V(StgValue_96_gpu_set_clip_fu_255_clip_h_V),
    .clip_h_V_ap_vld(StgValue_96_gpu_set_clip_fu_255_clip_h_V_ap_vld)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_condition_pp0_exit_iter0_state9))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state9)) begin
                ap_enable_reg_pp0_iter1 <= (ap_condition_pp0_exit_iter0_state9 ^ 1'b1);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_flag00011011 == 1'b0)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_grp_gpu_blit_rect_fu_232_ap_start <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state16)) begin
            ap_reg_grp_gpu_blit_rect_fu_232_ap_start <= 1'b1;
        end else if ((1'b1 == grp_gpu_blit_rect_fu_232_ap_ready)) begin
            ap_reg_grp_gpu_blit_rect_fu_232_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_gmem_ARREADY <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            if ((ap_sig_ioackin_gmem_ARREADY == 1'b1)) begin
                ap_reg_ioackin_gmem_ARREADY <= 1'b0;
            end else if ((1'b1 == gmem_ARREADY)) begin
                ap_reg_ioackin_gmem_ARREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        i1_reg_221 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_state17) & (ap_block_state17_on_subcall_done == 1'b0))) begin
        i1_reg_221 <= i_2_reg_459;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (exitcond_reg_441 == 1'd0) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        i_reg_209 <= i_1_reg_445;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        i_reg_209 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        ap_reg_pp0_iter1_exitcond_reg_441 <= exitcond_reg_441;
        ap_reg_pp0_iter1_i_reg_209 <= i_reg_209;
        exitcond_reg_441 <= exitcond_fu_315_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        arg0_V_reg_495 <= {{rowBuffer_V_1_q0[31:16]}};
        arg1_V_reg_501 <= arg1_V_fu_408_p1;
        arg2_V_reg_507 <= {{rowBuffer_V_1_q1[31:16]}};
        cmd_V_reg_490 <= cmd_V_fu_394_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (tmp_38_reg_437 == 1'd1) & (1'd0 == tmp_39_reg_455))) begin
        arg3_V_reg_513 <= arg3_V_fu_412_p1;
        arg5_V_reg_518 <= arg5_V_fu_417_p1;
        arg6_V_reg_523 <= {{rowBuffer_V_1_q1[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (tmp_38_reg_437 == 1'd1) & (1'd0 == tmp_39_reg_455) & (1'd0 == tmp_34_fu_421_p2) & (cmd_V_reg_490 == 16'd2) & (1'b1 == StgValue_96_gpu_set_clip_fu_255_clip_h_V_ap_vld))) begin
        clip_h_V <= StgValue_96_gpu_set_clip_fu_255_clip_h_V;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (tmp_38_reg_437 == 1'd1) & (1'd0 == tmp_39_reg_455) & (1'd0 == tmp_34_fu_421_p2) & (cmd_V_reg_490 == 16'd2) & (1'b1 == StgValue_96_gpu_set_clip_fu_255_clip_w_V_ap_vld))) begin
        clip_w_V <= StgValue_96_gpu_set_clip_fu_255_clip_w_V;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (tmp_38_reg_437 == 1'd1) & (1'd0 == tmp_39_reg_455) & (1'd0 == tmp_34_fu_421_p2) & (cmd_V_reg_490 == 16'd2) & (1'b1 == StgValue_96_gpu_set_clip_fu_255_clip_x_V_ap_vld))) begin
        clip_x_V <= StgValue_96_gpu_set_clip_fu_255_clip_x_V;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (tmp_38_reg_437 == 1'd1) & (1'd0 == tmp_39_reg_455) & (1'd0 == tmp_34_fu_421_p2) & (cmd_V_reg_490 == 16'd2) & (1'b1 == StgValue_96_gpu_set_clip_fu_255_clip_y_V_ap_vld))) begin
        clip_y_V <= StgValue_96_gpu_set_clip_fu_255_clip_y_V;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        frameBuffer_V1_reg_432 <= {{frameBuffer_V[31:2]}};
        gmem_addr_reg_426[29 : 0] <= tmp_fu_291_p1[29 : 0];
        tmp_38_reg_437 <= tmp_38_fu_311_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond_reg_441 == 1'd0) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        gmem_addr_read_reg_450 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        i_1_reg_445 <= i_1_fu_321_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        i_2_reg_459 <= i_2_fu_340_p2;
        tmp_39_reg_455 <= i1_reg_221[32'd6];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (1'd0 == tmp_39_fu_332_p3))) begin
        tmp_29_reg_464[7 : 2] <= tmp_29_fu_350_p3[7 : 2];
    end
end

always @ (*) begin
    if ((exitcond_fu_315_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state9 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state9 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) & ((1'd0 == tmp_38_reg_437) | (tmp_39_reg_455 == 1'd1) | (1'd1 == tmp_34_fu_421_p2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp0_iter0) & (1'b0 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_enable_reg_pp0_iter2))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) & ((1'd0 == tmp_38_reg_437) | (tmp_39_reg_455 == 1'd1) | (1'd1 == tmp_34_fu_421_p2)))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ioackin_gmem_ARREADY)) begin
        ap_sig_ioackin_gmem_ARREADY = gmem_ARREADY;
    end else begin
        ap_sig_ioackin_gmem_ARREADY = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_reg_ioackin_gmem_ARREADY))) begin
        gmem_ARADDR = gmem_addr_reg_426;
    end else if (((1'b1 == ap_CS_fsm_state16) | ((1'b1 == ap_CS_fsm_state17) & (cmd_V_reg_490 == 16'd1)))) begin
        gmem_ARADDR = grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_ARADDR;
    end else begin
        gmem_ARADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | ((1'b1 == ap_CS_fsm_state17) & (cmd_V_reg_490 == 16'd1)))) begin
        gmem_ARBURST = grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_ARBURST;
    end else begin
        gmem_ARBURST = 2'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | ((1'b1 == ap_CS_fsm_state17) & (cmd_V_reg_490 == 16'd1)))) begin
        gmem_ARCACHE = grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_ARCACHE;
    end else begin
        gmem_ARCACHE = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | ((1'b1 == ap_CS_fsm_state17) & (cmd_V_reg_490 == 16'd1)))) begin
        gmem_ARID = grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_ARID;
    end else begin
        gmem_ARID = 1'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_reg_ioackin_gmem_ARREADY))) begin
        gmem_ARLEN = 32'd256;
    end else if (((1'b1 == ap_CS_fsm_state16) | ((1'b1 == ap_CS_fsm_state17) & (cmd_V_reg_490 == 16'd1)))) begin
        gmem_ARLEN = grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_ARLEN;
    end else begin
        gmem_ARLEN = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | ((1'b1 == ap_CS_fsm_state17) & (cmd_V_reg_490 == 16'd1)))) begin
        gmem_ARLOCK = grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_ARLOCK;
    end else begin
        gmem_ARLOCK = 2'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | ((1'b1 == ap_CS_fsm_state17) & (cmd_V_reg_490 == 16'd1)))) begin
        gmem_ARPROT = grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_ARPROT;
    end else begin
        gmem_ARPROT = 3'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | ((1'b1 == ap_CS_fsm_state17) & (cmd_V_reg_490 == 16'd1)))) begin
        gmem_ARQOS = grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_ARQOS;
    end else begin
        gmem_ARQOS = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | ((1'b1 == ap_CS_fsm_state17) & (cmd_V_reg_490 == 16'd1)))) begin
        gmem_ARREGION = grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_ARREGION;
    end else begin
        gmem_ARREGION = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | ((1'b1 == ap_CS_fsm_state17) & (cmd_V_reg_490 == 16'd1)))) begin
        gmem_ARSIZE = grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_ARSIZE;
    end else begin
        gmem_ARSIZE = 3'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | ((1'b1 == ap_CS_fsm_state17) & (cmd_V_reg_490 == 16'd1)))) begin
        gmem_ARUSER = grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_ARUSER;
    end else begin
        gmem_ARUSER = 1'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_reg_ioackin_gmem_ARREADY))) begin
        gmem_ARVALID = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state16) | ((1'b1 == ap_CS_fsm_state17) & (cmd_V_reg_490 == 16'd1)))) begin
        gmem_ARVALID = grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_ARVALID;
    end else begin
        gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | ((1'b1 == ap_CS_fsm_state17) & (cmd_V_reg_490 == 16'd1)))) begin
        gmem_AWVALID = grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_AWVALID;
    end else begin
        gmem_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | ((1'b1 == ap_CS_fsm_state17) & (cmd_V_reg_490 == 16'd1)))) begin
        gmem_BREADY = grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_BREADY;
    end else begin
        gmem_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (exitcond_reg_441 == 1'd0) & (ap_block_pp0_stage0_flag00011001 == 1'b0))) begin
        gmem_RREADY = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state16) | ((1'b1 == ap_CS_fsm_state17) & (cmd_V_reg_490 == 16'd1)))) begin
        gmem_RREADY = grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_RREADY;
    end else begin
        gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | ((1'b1 == ap_CS_fsm_state17) & (cmd_V_reg_490 == 16'd1)))) begin
        gmem_WVALID = grp_gpu_blit_rect_fu_232_m_axi_frameBuffer_V_WVALID;
    end else begin
        gmem_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        gmem_blk_n_AR = m_axi_gmem_ARREADY;
    end else begin
        gmem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_flag00000000 == 1'b0) & (exitcond_reg_441 == 1'd0))) begin
        gmem_blk_n_R = m_axi_gmem_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & (ap_block_pp0_stage0_flag00000000 == 1'b0) & (exitcond_reg_441 == 1'd0))) begin
        i_phi_fu_213_p4 = i_1_reg_445;
    end else begin
        i_phi_fu_213_p4 = i_reg_209;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        rowBuffer_V_1_address0 = tmp_31_cast_fu_379_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        rowBuffer_V_1_address0 = tmp_29_cast_fu_358_p1;
    end else begin
        rowBuffer_V_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        rowBuffer_V_1_address1 = tmp_32_cast_fu_389_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        rowBuffer_V_1_address1 = tmp_30_cast_fu_369_p1;
    end else if (((ap_block_pp0_stage0_flag00000000 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2))) begin
        rowBuffer_V_1_address1 = i_cast1_fu_327_p1;
    end else begin
        rowBuffer_V_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        rowBuffer_V_1_ce0 = 1'b1;
    end else begin
        rowBuffer_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | ((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2)))) begin
        rowBuffer_V_1_ce1 = 1'b1;
    end else begin
        rowBuffer_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_block_pp0_stage0_flag00011001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (1'd0 == ap_reg_pp0_iter1_exitcond_reg_441))) begin
        rowBuffer_V_1_we1 = 1'b1;
    end else begin
        rowBuffer_V_1_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (1'd0 == tmp_38_fu_311_p1))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (tmp_38_fu_311_p1 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (ap_sig_ioackin_gmem_ARREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_enable_reg_pp0_iter1 == 1'b0)) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (exitcond_fu_315_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_block_pp0_stage0_flag00011011 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter2) & (ap_enable_reg_pp0_iter1 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_flag00011011 == 1'b0) & (exitcond_fu_315_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == ap_CS_fsm_state13) & (tmp_39_fu_332_p3 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_CS_fsm_state15) & ((1'd0 == tmp_38_reg_437) | (tmp_39_reg_455 == 1'd1) | (1'd1 == tmp_34_fu_421_p2)))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((1'b1 == ap_CS_fsm_state15) & (((tmp_38_reg_437 == 1'd1) & (1'd0 == tmp_39_reg_455) & (1'd0 == tmp_34_fu_421_p2) & (cmd_V_reg_490 == 16'd2)) | ((tmp_38_reg_437 == 1'd1) & (1'd0 == tmp_39_reg_455) & (1'd0 == tmp_34_fu_421_p2) & ~(cmd_V_reg_490 == 16'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            if (((1'b1 == ap_CS_fsm_state17) & (ap_block_state17_on_subcall_done == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign StgValue_96_gpu_set_clip_fu_255_arg3_V = rowBuffer_V_1_q0[15:0];

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0_flag00000000 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_flag00011001 = ((1'b1 == ap_enable_reg_pp0_iter1) & (exitcond_reg_441 == 1'd0) & (1'b0 == gmem_RVALID));
end

always @ (*) begin
    ap_block_pp0_stage0_flag00011011 = ((1'b1 == ap_enable_reg_pp0_iter1) & (exitcond_reg_441 == 1'd0) & (1'b0 == gmem_RVALID));
end

always @ (*) begin
    ap_block_state10_pp0_stage0_iter1 = ((exitcond_reg_441 == 1'd0) & (1'b0 == gmem_RVALID));
end

assign ap_block_state11_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state17_on_subcall_done = ((1'b0 == grp_gpu_blit_rect_fu_232_ap_done) & (cmd_V_reg_490 == 16'd1));
end

assign ap_block_state9_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign arg1_V_fu_408_p1 = rowBuffer_V_1_q1[15:0];

assign arg3_V_fu_412_p1 = rowBuffer_V_1_q0[15:0];

assign arg5_V_fu_417_p1 = rowBuffer_V_1_q1[15:0];

assign cl_V3_fu_281_p4 = {{cl_V[31:2]}};

assign cmd_V_fu_394_p1 = rowBuffer_V_1_q0[15:0];

assign exitcond_fu_315_p2 = ((i_phi_fu_213_p4 == 9'd256) ? 1'b1 : 1'b0);

assign grp_gpu_blit_rect_fu_232_ap_start = ap_reg_grp_gpu_blit_rect_fu_232_ap_start;

assign i_1_fu_321_p2 = (i_phi_fu_213_p4 + 9'd1);

assign i_2_fu_340_p2 = (i1_reg_221 + 7'd1);

assign i_cast1_fu_327_p1 = ap_reg_pp0_iter1_i_reg_209;

assign tmp_29_cast_fu_358_p1 = tmp_29_fu_350_p3;

assign tmp_29_fu_350_p3 = {{tmp_40_fu_346_p1}, {2'd0}};

assign tmp_30_cast_fu_369_p1 = tmp_30_fu_363_p2;

assign tmp_30_fu_363_p2 = (tmp_29_fu_350_p3 | 8'd1);

assign tmp_31_cast_fu_379_p1 = tmp_31_fu_374_p2;

assign tmp_31_fu_374_p2 = (tmp_29_reg_464 | 8'd2);

assign tmp_32_cast_fu_389_p1 = tmp_32_fu_384_p2;

assign tmp_32_fu_384_p2 = (tmp_29_reg_464 | 8'd3);

assign tmp_34_fu_421_p2 = ((cmd_V_reg_490 == 16'd0) ? 1'b1 : 1'b0);

assign tmp_38_fu_311_p1 = status_V[0:0];

assign tmp_39_fu_332_p3 = i1_reg_221[32'd6];

assign tmp_40_fu_346_p1 = i1_reg_221[5:0];

assign tmp_fu_291_p1 = cl_V3_fu_281_p4;

always @ (posedge ap_clk) begin
    gmem_addr_reg_426[31:30] <= 2'b00;
    tmp_29_reg_464[1:0] <= 2'b00;
end

endmodule //gpu
